apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: "kotlin-android"
apply plugin: 'com.kezong.fat-aar' //https://github.com/kezong/fat-aar-android

android {
  compileSdkVersion COMPILE_SDK_VERSION
  buildFeatures {
    buildConfig = true
  }

  repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/aptoide/Aptoide" }
  }

  configurations.embed.transitive = true //Needed for kezong.fat-aar plugin

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    versionCode VERSION_CODE
    versionName VERSION_NAME
    buildConfigField "boolean", "URI_COMMUNICATION", "true"
    buildConfigField 'String', 'RAKAM_API_KEY', project.RAKAM_API_KEY
    buildConfigField "int", "MIN_SDK_VERSION", "$minSdkVersion.apiLevel"
    buildConfigField 'int', 'VERSION_CODE', "${defaultConfig.versionCode}"
    buildConfigField 'String', 'VERSION_NAME', "\"${defaultConfig.versionName}\""
  }

  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }

  buildTypes {
    debug {
      minifyEnabled false
      buildConfigField 'String', 'APTOIDE_PACKAGE_NAME',
          project.APTOIDE_PACKAGE_NAME_DEV
      buildConfigField 'String', 'APPCOINS_WALLET_PACKAGE_NAME',
          project.APPCOINS_WALLET_PACKAGE_NAME_DEV
      buildConfigField 'String', 'GAMESHUB_PACKAGE_NAME',
          project.GAMESHUB_PACKAGE_NAME_STG
      buildConfigField 'String', 'GAMESHUB_PACKAGE_NAME_ALTERNATIVE',
          project.GAMESHUB_PACKAGE_NAME_DEV

      buildConfigField 'String', 'APPCOINS_WALLET_IAB_BIND_ACTION',
          project.APPCOINS_WALLET_IAB_BIND_ACTION_DEV
      buildConfigField 'String', 'GAMESHUB_IAB_BIND_ACTION',
          project.GAMESHUB_IAB_BIND_ACTION_STG
      buildConfigField 'String', 'GAMESHUB_IAB_BIND_ACTION_ALTERNATIVE',
          project.GAMESHUB_IAB_BIND_ACTION_DEV

      buildConfigField 'String', 'SERVICE_BIND_LIST',
          "\"" + project.APTOIDE_PACKAGE_NAME_DEV.replace('\"', '') +
              "," +
              project.APPCOINS_WALLET_PACKAGE_NAME_DEV.replace('\"', '') +
              "," +
              project.GAMESHUB_PACKAGE_NAME_STG.replace('\"', '') +
              "," +
              project.GAMESHUB_PACKAGE_NAME_DEV.replace('\"', '') +
              "\""

      buildConfigField 'String', 'HOST_WS',
          "\"" + project.ROPSTEN_NETWORK_BACKEND_BASE_HOST_WS + "\""
      buildConfigField 'String', 'BACKEND_BASE',
          "\"" + project.ROPSTEN_NETWORK_BACKEND_BASE_HOST + "\""
      buildConfigField 'String', 'BDS_BASE_HOST', project.BDS_BASE_HOST_DEV
      buildConfigField 'String', 'PAYFLOW_HOST', project.PAYFLOW_NETWORK_BASE_HOST_DEV
      buildConfigField 'String', 'MMP_BASE_HOST', project.MMP_BASE_HOST_DEV

      buildConfigField 'String', 'WALLET_APP_BROWSER_URL', project.WALLET_APP_BROWSER_URL

      buildConfigField 'String', 'ADYEN_PUBLIC_KEY', project.ADYEN_PUBLIC_KEY_DEV
      buildConfigField 'String', 'INDICATIVE_API_KEY',
          project.INDICATIVE_API_KEY_DEV

      buildConfigField 'String', 'DEFAULT_OEM_ADDRESS', "\"" + project.DEFAULT_OEM_ADDRESS + "\""
      buildConfigField 'String', 'DEFAULT_STORE_ADDRESS',
          "\"" + project.DEFAULT_STORE_ADDRESS + "\""
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      buildConfigField 'String', 'APTOIDE_PACKAGE_NAME',
          project.APTOIDE_PACKAGE_NAME
      buildConfigField 'String', 'APPCOINS_WALLET_PACKAGE_NAME',
          project.APPCOINS_WALLET_PACKAGE_NAME
      buildConfigField 'String', 'GAMESHUB_PACKAGE_NAME',
          project.GAMESHUB_PACKAGE_NAME
      buildConfigField 'String', 'GAMESHUB_PACKAGE_NAME_ALTERNATIVE',
          project.GAMESHUB_PACKAGE_NAME

      buildConfigField 'String', 'APPCOINS_WALLET_IAB_BIND_ACTION',
          project.APPCOINS_WALLET_IAB_BIND_ACTION
      buildConfigField 'String', 'GAMESHUB_IAB_BIND_ACTION',
          project.GAMESHUB_IAB_BIND_ACTION
      buildConfigField 'String', 'GAMESHUB_IAB_BIND_ACTION_ALTERNATIVE',
          project.GAMESHUB_IAB_BIND_ACTION

      buildConfigField 'String', 'SERVICE_BIND_LIST',
          "\"" + project.APTOIDE_PACKAGE_NAME.replace('\"', '') +
              "," +
              project.APPCOINS_WALLET_PACKAGE_NAME.replace('\"', '') +
              "," +
              project.GAMESHUB_PACKAGE_NAME.replace('\"', '') +
              "\""

      buildConfigField 'String', 'HOST_WS',
          "\"" + project.MAIN_NETWORK_BACKEND_BASE_HOST_WS + "\""
      buildConfigField 'String', 'BACKEND_BASE',
          "\"" + project.MAIN_NETWORK_BACKEND_BASE_HOST + "\""
      buildConfigField 'String', 'BDS_BASE_HOST', project.BDS_BASE_HOST_PROD
      buildConfigField 'String', 'PAYFLOW_HOST', project.PAYFLOW_NETWORK_BASE_HOST
      buildConfigField 'String', 'MMP_BASE_HOST', project.MMP_BASE_HOST_PROD

      buildConfigField 'String', 'WALLET_APP_BROWSER_URL', project.WALLET_APP_BROWSER_URL

      buildConfigField 'String', 'ADYEN_PUBLIC_KEY', project.ADYEN_PUBLIC_KEY
      buildConfigField 'String', 'INDICATIVE_API_KEY',
          project.INDICATIVE_API_KEY

      buildConfigField 'String', 'DEFAULT_OEM_ADDRESS', "\"" + project.DEFAULT_OEM_ADDRESS + "\""
      buildConfigField 'String', 'DEFAULT_STORE_ADDRESS',
          "\"" + project.DEFAULT_STORE_ADDRESS + "\""
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.mockito:mockito-core:4.8.0'
  testImplementation 'org.json:json:20220924'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

  api 'com.indicative.client.android:Indicative-Android:1.1.0'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'org.java-websocket:Java-WebSocket:1.5.3'


  api project(':appcoins-billing')
  api project(':appcoins-adyen')
  api project(':communication')
}

//Publish configuration
task androidSourcesJar(type: Jar) {
  archiveClassifier.set('sources')
  from android.sourceSets.main.java.srcDirs
}

artifacts {
  archives androidSourcesJar
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
  println "Found secret props file, loading props"
  Properties p = new Properties()
  p.load(new FileInputStream(secretPropsFile))
  p.each { name, value ->
    ext[name] = value
  }
} else {
  println "No props file, loading env vars"
  ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
  ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
  ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
  ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
  ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
  ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

publishing {
  publications {
    release(MavenPublication) {
      groupId PUBLISH_GROUP_ID
      artifactId project.name
      version PUBLISH_VERSION

      artifact("$buildDir/outputs/aar/${project.name}-${System.getenv('BUILD_TYPE_NAME')}.aar")
      artifact androidSourcesJar

      pom {
        name = project.name
        description = 'AppCoins Billing SDK'
        url = 'https://github.com/Catappult/appcoins-sdk/android-appcoins-billing'
        licenses {
          license {
            name = 'The Apache License, Version 3.0'
            url = 'http://www.apache.org/licenses/LICENSE-3.0.txt'
          }
        }
        developers {
          developer {
            id = 'appcoins.wallet'
            name = 'AppCoins Wallet Team'
            email = 'wallet@aptoide.com'
          }
        }
        scm {
          connection = 'scm:git:github.com/Catappult/appcoins-sdk.git'
          developerConnection = 'scm:git:ssh://github.com/Catappult/appcoins-sdk.git'
          url = 'https://github.com/Catappult/appcoins-sdk'
        }
        withXml {
          def dependenciesNode = asNode().appendNode('dependencies')

          project.configurations.implementation.allDependencies.each {
            if (it.name != "unspecified"){
              def dependencyNode = dependenciesNode.appendNode('dependency')
              dependencyNode.appendNode('groupId', it.group)
              dependencyNode.appendNode('artifactId', it.name)
              dependencyNode.appendNode('version', it.version)
            }
          }
        }
      }
    }
  }
  repositories {
    maven {
      name = "sonatype"

      def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

      credentials {
        username OSSRH_USERNAME
        password OSSRH_PASSWORD
      }
    }
  }
}

signing {
  sign publishing.publications
}
//end publish configuration

