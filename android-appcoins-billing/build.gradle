apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.kezong.fat-aar' //https://github.com/kezong/fat-aar-android

android {
  compileSdkVersion COMPILE_SDK_VERSION

  repositories {
    maven { url "https://dl.bintray.com/aptoide/Aptoide" }
  }

  configurations.embed.transitive = true //Needed for kezong.fat-aar plugin

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    versionCode VERSION_CODE
    versionName VERSION_NAME
    buildConfigField "boolean", "URI_COMMUNICATION", "true"
    buildConfigField 'String', 'RAKAM_API_KEY', project.RAKAM_API_KEY
    buildConfigField "int", "MIN_SDK_VERSION", "$minSdkVersion.apiLevel"
  }

  buildTypes {
    debug {
      minifyEnabled false
      buildConfigField "String", "IAB_BIND_ACTION",
          "\"" + project.APPCOINS_DEV_IAB_BIND_ACTION + "\""
      buildConfigField "String", "CAFE_BAZAAR_IAB_BIND_ACTION",
          "\"" + project.CAFE_BAZAAR_IAB_BIND_ACTION + "\""
      buildConfigField "String", "IAB_BIND_PACKAGE",
          "\"" + project.APPCOINS_DEV_IAB_BIND_PACKAGE + "\""
      buildConfigField 'String', 'BDS_WALLET_PACKAGE_NAME',
          project.BDS_WALLET_PACKAGE_NAME_DEV
      buildConfigField 'String', 'APTOIDE_PACKAGE_NAME',
          project.APTOIDE_PACKAGE_NAME_DEV
      buildConfigField 'String', 'CAFE_BAZAAR_PACKAGE_NAME',
          project.CAFE_BAZAAR_PACKAGE_NAME
      buildConfigField 'String', 'CAFE_BAZAAR_WALLET_PACKAGE_NAME',
          project.CAFE_BAZAAR_WALLET_PACKAGE_NAME
      buildConfigField 'String', 'HOST_WS',
          "\"" + project.ROPSTEN_NETWORK_BACKEND_BASE_HOST_WS + "\""
      buildConfigField 'String', 'BACKEND_BASE',
          "\"" + project.ROPSTEN_NETWORK_BACKEND_BASE_HOST + "\""
      buildConfigField 'String', 'SERVICE_BIND_LIST',
          "\"" + project.APTOIDE_PACKAGE_NAME_DEV.replace('\"', '') +
              "," +
              project.BDS_WALLET_PACKAGE_NAME_DEV.replace('\"', '') +
              "," +
              project.CAFE_BAZAAR_WALLET_PACKAGE_NAME.replace('\"', '') +
              "\""
      buildConfigField 'String', 'ADYEN_PUBLIC_KEY', project.ADYEN_PUBLIC_KEY_DEV
      buildConfigField 'String', 'DEFAULT_OEM_ADDRESS', "\"" + project.DEFAULT_OEM_ADDRESS + "\""
      buildConfigField 'String', 'DEFAULT_STORE_ADDRESS',
          "\"" + project.DEFAULT_STORE_ADDRESS + "\""
      buildConfigField 'String', 'BDS_BASE_HOST', project.BDS_BASE_HOST_DEV
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField "String", "IAB_BIND_ACTION",
          "\"" + project.APPCOINS_IAB_BIND_ACTION + "\""
      buildConfigField "String", "CAFE_BAZAAR_IAB_BIND_ACTION",
          "\"" + project.CAFE_BAZAAR_IAB_BIND_ACTION + "\""
      buildConfigField "String", "IAB_BIND_PACKAGE",
          "\"" + project.APPCOINS_IAB_BIND_PACKAGE + "\""
      buildConfigField 'String', 'BDS_WALLET_PACKAGE_NAME',
          project.BDS_WALLET_PACKAGE_NAME
      buildConfigField 'String', 'APTOIDE_PACKAGE_NAME',
          project.APTOIDE_PACKAGE_NAME
      buildConfigField 'String', 'CAFE_BAZAAR_PACKAGE_NAME',
          project.CAFE_BAZAAR_PACKAGE_NAME
      buildConfigField 'String', 'CAFE_BAZAAR_WALLET_PACKAGE_NAME',
          project.CAFE_BAZAAR_WALLET_PACKAGE_NAME
      buildConfigField 'String', 'HOST_WS',
          "\"" + project.MAIN_NETWORK_BACKEND_BASE_HOST_WS + "\""
      buildConfigField 'String', 'BACKEND_BASE',
          "\"" + project.MAIN_NETWORK_BACKEND_BASE_HOST + "\""
      buildConfigField 'String', 'SERVICE_BIND_LIST',
          "\"" + project.APTOIDE_PACKAGE_NAME.replace('\"', '') +
              "," +
              project.BDS_WALLET_PACKAGE_NAME.replace('\"', '') +
              "," +
              project.CAFE_BAZAAR_WALLET_PACKAGE_NAME.replace('\"', '') +
              "\""
      buildConfigField 'String', 'ADYEN_PUBLIC_KEY', project.ADYEN_PUBLIC_KEY
      buildConfigField 'String', 'DEFAULT_OEM_ADDRESS', "\"" + project.DEFAULT_OEM_ADDRESS + "\""
      buildConfigField 'String', 'DEFAULT_STORE_ADDRESS',
          "\"" + project.DEFAULT_STORE_ADDRESS + "\""
      buildConfigField 'String', 'BDS_BASE_HOST', project.BDS_BASE_HOST_PROD
      minifyEnabled false
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation 'aptoide-client-v8:aptoide-analytics-core:1.0.4'
  embed 'aptoide-client-v8:aptoide-analytics-core:1.0.4' //Needed so that if the dev use SDK the lib is automatically included

  testImplementation 'junit:junit:4.12'
  testImplementation 'org.mockito:mockito-core:2.28.2'
  testImplementation 'org.json:json:20190722'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

  api project(path: ':appcoins-billing')
  api project(':appcoins-adyen')
  api project(path: ':communication')
}

//region Publishing
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier "sources"
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

  failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    MyPublication(MavenPublication) {
      groupId 'com.blockchainds'
      artifactId project.name
      version project.version
      artifact(sourcesJar)
      artifact(javadocJar)
      artifact("$buildDir/outputs/aar/${project.name}-${System.getenv('BUILD_TYPE_NAME')}.aar")

      //The publication doesn't know about our dependencies, so we have to manually add them to the pom
      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        //Iterate over the api dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.api.allDependencies.each {
          def dependencyNode = dependenciesNode.appendNode('dependency')
          dependencyNode.appendNode('groupId', it.group)
          dependencyNode.appendNode('artifactId', it.name)
          dependencyNode.appendNode('version', it.version)
        }
      }
    }
  }
  repositories {
    maven {
      url "$buildDir/repo"
    }
  }
}

bintray {
  user = "${BDS_BINTRAY_USER}"
  key = "${BDS_BINTRAY_KEY}"
  publications = ['MyPublication']
  pkg {
    def publishNameSuffix = System.getenv('BUILD_NAME_SUFFIX')
    repo = publishNameSuffix != null ? 'bds-stage' : 'bds'
    name = "${project.name}"
    userOrg = "${BDS_BINTRAY_ORG}"
    licenses = ['GPL-3.0']
    vcsUrl = 'https://github.com/Catappult/appcoins-sdk/android-appcoins-billing'

    version {
      name = project.version
    }
  }
}
//endregion

